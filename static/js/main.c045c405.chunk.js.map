{"version":3,"sources":["Form/styled.js","Form/index.js","List/styled.js","List/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","App.js","useTasks.js","reportWebVitals.js","index.js"],"names":["MainForm","styled","form","FormContainer","div","FormButton","button","Input","input","Form","addNewTask","inputRef","useRef","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","current","focus","ref","value","placeholder","onChange","target","TasksList","ul","ListItem","span","hidden","css","Content","done","Button","toggleTaskDone","remove","List","tasks","hideDone","removeTask","map","task","onClick","id","content","ButtonsContainer","ButtonsHeader","h2","Buttons","toggleHideDone","setAllDone","length","none","disabled","every","SectionContainer","section","SectionHeader","Section","extraTitle","body","Header","title","className","MainContainer","main","Conatiner","children","App","setHideDone","tasksFromLocalStorage","localStorage","getItem","JSON","parse","setTasks","useEffect","setItem","stringify","filter","useTasks","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c045c405.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const MainForm = styled.form`\n    padding: 15px;\n`;\n\nexport const FormContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr auto;\n    gap: 10px;\n\n    @media (max-width: 767px) {\n        grid-template-columns: 1fr;\n    }\n`;\n\nexport const FormButton = styled.button`\n    color: white;\n    background-color: teal;\n    margin: 5px;\n    padding: 10px;\n    border: none;\n    font-size: larger;\n    transition: 1s;\n\n    @media (max-width: 767px) {\n        padding: 10px;\n    }\n\n    &:hover {\n        background-color: hsl(180, 100%, 35%);\n        transform: scale(1.1);  \n    }\n\n`;\n\nexport const Input = styled.input`\n    margin: 5px;\n    font-size: larger;\n\n     @media (max-width: 767px) {\n        padding-top: 10px;\n        padding-bottom: 10px;\n    }\n`;","import React, { useState, useRef } from 'react';\nimport { FormButton, FormContainer, MainForm, Input} from \"./styled\";\n\n\nconst Form = ({ addNewTask }) => {\n  const inputRef = useRef(null);\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n\n    const trimmedNewTaskContent = newTaskContent.trim();\n    if (!trimmedNewTaskContent) {\n      return;\n    }\n\n    addNewTask(trimmedNewTaskContent);\n    setNewTaskContent(\"\");\n    inputRef.current.focus();\n  };\n\n  return (\n    <MainForm\n      onSubmit={onFormSubmit}\n    >\n      <FormContainer>\n        <Input\n          ref={inputRef}\n          value={newTaskContent}\n          placeholder=\"Co jest do zrobienia?\"\n          onChange={({ target }) => setNewTaskContent(target.value)}\n       />\n        <FormButton>\n          Dodaj Zadanie\n        </FormButton>\n      </FormContainer>\n    </MainForm>\n  );\n};\n\nexport default Form;","import styled, { css } from \"styled-components\"\n\nexport const TasksList = styled.ul`\n    padding: 0;\n    list-style-type: none;\n\n    @media (max-width: 767px) {\n        margin-top: 10px;\n        padding: 10px;\n    }\n`;\n\nexport const ListItem = styled.span`\n    font-size: large;\n    display: grid;\n    grid-template-columns: 10% 80% 10%;\n    justify-items: center;\n    align-items: center;\n    padding: 10px;\n    border-bottom: 1px solid #ccc;\n    margin-left: 15px;\n    margin-right: 15px;\n\n    ${({ hidden }) => hidden && css`\n        display: none;\n    `}\n\n    @media (max-width: 767px) {\n        padding: 15px;\n    }\n`;\n\nexport const Content = styled.span`\n    max-width: 400px;\n    word-wrap: break-word;\n    font-size: larger;\n    text-align: center;\n\n    ${({ done }) => done && css`\n        text-decoration: line-through;\n    `}\n\n    @media (max-width: 767px) {\n        max-width: 100px;\n    }\n`;\n\nexport const Button = styled.button`\n    color: white;\n    padding: 0;\n    border: none;\n    height: 35px;\n    width: 40px;\n    transition: 1s;\n\n\n    ${({ toggleTaskDone }) => toggleTaskDone && css`\n        background-color: rgb(2, 161, 2);\n        font-size: xx-large;\n\n        &:hover {\n            background-color: hsl(120, 97%, 40%);\n        }\n    `}\n\n    ${({ remove }) => remove && css`\n        background-color: rgb(255, 102, 102);\n        font-size: x-large;\n\n        &:hover {\n            background-color: hsl(0, 100%, 80%);\n        }\n    `}\n`;","import React from 'react';\nimport { TasksList, ListItem, Content, Button } from \"./styled\";\n\nconst List = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\n  <TasksList>\n    {tasks.map(task => (\n      <li\n        key={task.id}\n      >\n        <ListItem\n          hidden={task.done && hideDone}\n        >\n          <Button\n            toggleTaskDone\n            onClick={() => toggleTaskDone(task.id)}\n          >\n            {task.done ? \"âœ”\" : \"\"}\n          </Button>\n          <Content\n            done={task.done}\n          >\n            {task.content}\n          </Content>\n          <Button\n            remove\n            onClick={() => removeTask(task.id)}\n          >ðŸ—‘</Button>\n        </ListItem>\n      </li>\n    ))}\n  </TasksList>\n\n);\n\nexport default List;","import styled, {css} from \"styled-components\";\n\nexport const ButtonsContainer = styled.div`\n    display: grid;\n    grid-template-columns: 2fr 1fr 1fr;\n\n    @media (max-width: 767px) {\n        display: block;\n    }\n`;\n\nexport const ButtonsHeader = styled.h2`\n    font-size: x-large;\n    padding: 15px;\n    align-self: center;\n    border-bottom: 1px solid #ccc;\n    font-weight: bold;\n    margin-top: 0;\n\n@media (max-width: 767px) {\n        margin-bottom: 10px;\n    }\n`;\n\nexport const Button = styled.button`\n    color: teal;\n    background-color: white;\n    border: none;\n    border-bottom: 1px solid #ccc;\n    max-height: 58px;\n    font-size: larger;\n    transition: 1s;\n\n    @media (max-width: 767px) {\n        border-bottom: none;\n        padding: 10px;\n        display: block;\n        margin: 0 auto;\n    }\n\n    ${({ hidden }) => hidden && css`\n        display: none;\n    `}\n\n    &:hover {\n        color: hsl(180, 100%, 35%);\n    }\n\n    &:disabled {\n        color: gray;\n    }\n`;","import React from 'react';\nimport { ButtonsContainer, ButtonsHeader, Button } from \"./styled\";\n\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => {\n  if (tasks.length === 0) {\n    return (\n      <ButtonsContainer>\n        <ButtonsHeader>\n          Lista zadaÅ„\n        </ButtonsHeader>\n        <Button none disabled></Button>\n        <Button none disabled></Button>\n      </ButtonsContainer>\n    )\n  }\n  return (\n    <ButtonsContainer>\n      <ButtonsHeader>\n        Lista zadaÅ„\n        </ButtonsHeader>\n      <Button\n        onClick={toggleHideDone}\n      >\n        {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\n      </Button>\n      <Button\n        disabled={tasks.every(({ done }) => done)}\n        onClick={setAllDone}\n      >\n        UkoÅ„cz wszystkie\n      </Button>\n    </ButtonsContainer>\n  )\n};\n\nexport default Buttons;\n","import styled from \"styled-components\";\n\nexport const SectionContainer = styled.section`\n        background-color: white;\n        margin-bottom: 10px;\n        padding-bottom: 15px;\n\n    @media (max-width: 767px) {\n        border-bottom: none;\n        display: block;\n        margin: 0 auto;\n    }\n`;\n\nexport const SectionHeader = styled.h2`\n    font-size: x-large;\n    padding: 15px;\n    align-self: center;\n    border-bottom: 1px solid #ccc;\n    font-weight: bold;\n    margin-top: 0;\n\n@media (max-width: 767px) {\n        margin-bottom: 10px;\n    }\n`;","import React from 'react';\nimport { SectionContainer, SectionHeader} from \"./styled\"\n\nconst Section = ({ extraTitle, body }) => {\n  if (extraTitle) {\n    return (\n      <SectionContainer>\n        <SectionHeader>\n          {extraTitle}\n        </SectionHeader>\n        <div>\n          {body}\n        </div>\n      </SectionContainer>\n    )\n  }\n  return (\n    <SectionContainer>\n      <div>\n        {body}\n      </div>\n    </SectionContainer>\n  )\n};\n\nexport default Section;","import React from 'react';\n\nconst Header = ({ title }) => (\n      <header>\n        <h1 className=\"header\">{title}</h1>\n      </header>\n\n);\nexport default Header;","import styled from \"styled-components\";\n\nexport const MainContainer = styled.main`\n    max-width: 900px;\n    padding: 20px;\n    margin: 0 auto;\n`;","import React from 'react';\nimport {MainContainer} from \"./styled\";\n\nconst Conatiner = ({children}) => (\n  <MainContainer>\n    {children}\n  </MainContainer>\n)\n\nexport default Conatiner;","import React, { useState } from 'react';\nimport Form from './Form';\nimport List from './List';\nimport Buttons from './Buttons'\nimport Section from './Section'\nimport Header from './Header'\nimport Container from './Container'\nimport {useTasks} from './useTasks'\n\n\nfunction App() {\n\n  const [hideDone, setHideDone] = useState(false);\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask,\n  } = useTasks();\n\n\n  return (\n\n    <Container>\n\n      <Header title=\"Lista zadaÅ„\" />\n\n      <Section extraTitle=\"Dodaj nowe zadanie\" body={<Form addNewTask={addNewTask} />} />\n\n      <Section body={\n        <>\n          <Buttons tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n          <List\n            tasks={tasks} hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        </>\n      }\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import {useState, useEffect} from 'react'\n\nexport const useTasks = () => {\n\n  const tasksFromLocalStorage = localStorage.getItem(\"tasks\");\n\n  const [tasks, setTasks] = useState(\n    tasksFromLocalStorage\n      ? JSON.parse(tasksFromLocalStorage)\n      : []\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  }\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done }\n      };\n      return task;\n    }));\n  };\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true,\n    })));\n  };\n\n  const addNewTask = (newTaskContent) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content: newTaskContent,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ]);\n  };\n  return {tasks, removeTask, toggleTaskDone, setAllDone, addNewTask};\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}